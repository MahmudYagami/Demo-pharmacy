<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAABwRJREFUaEPt
        mntQVFUcx5mayaayh2YCWlZ/10zOOCMlLMRDclIJZBEQSLTGFDSTBEQxEN8gKYimKLh3wQdm5iCgvPOB
        goD5AhNhd1FRkOVlZrK7/Drnehb37j2w7BOm2e/MZ4Y9y/5+3+/de++ee+61scoqq6yyyirzqad4wtie
        InuvR4W2zmRo5Ahk2W8hPuQgyXyTvD1kdReNd+gpsdskL5swsbvYvqW72A4wPcV2e8i/WF4AcS8oJGIX
        hVS8TillyhBtCBiAVkSZQsLEI5zxZ0kZqvC32lVoNwWFjVeHVfN32Thb8m+WEdzZN0YlZdagABKNQPrS
        pJKKY3AtUpaq7iL7OK3AfRYLDI05bygkos3I7CMt88bQo5AxG6Eh63XShqPHp9626y62vfc8sH0aecu8
        UspEQcjcAy2zpuS+UiIOIO04suhJCx4wryIzjJY58yFjMqFlzyukvWUFDRnj0LFaQzVmRtCxXY17Exsc
        dTr5xnYIhHmtbgHjyZBphI9X1PgyzZAlQBu6lnZcdwh8uxEgF8zxI0PGCxpSRqGm+GeGasaClMCNnJeI
        LVadAuFsubPvOpgxYxQZGrraXIS2aGvldzj7xpAhVqhRtlbjYUSUTmwZL7lAOBfvHohOMmSjlDD+9MbD
        iIwREnvGSeIy/2W5wDehw9F3Jn4Nd0VjUQO5dsOuG+mwKXwuhLg5QrDrtCGx1McT6gq3cOoYQash01Od
        UkhFiZRmsCMyBHZtXgvVlcVQc6lkSBScOAihns7wpCGTV08vZAdZ0HR0C7FpGoFUbIcaPOE1RCz5yh0u
        nM2D2LBvISI0kMfK0HlwrjwXRGlJ/WO5Rw9A1AJ/aCxP4tXTB1VnLQv6+zHcZt4hdo0XmjLGaTdT890s
        N7h4/hT1mxyMuPCFUHU8nlrTEFQyZi2xa5wAcl5EBe9qN1BjaODfD+2DEA8niAicqZPoEC+o133MS3Vd
        ZQ1JaPLuSCnej6GBMZUVBVCUf0QnmWmJkBwRRO2vSa8ky4HYNlz4GpVWXI0xgYfKsay9sG2F7sAqmfgn
        YttwoUIl2oU1WTwbnbTOFbDGKitOQ5DH5xDk5mJSAlycYK6jA8x3F7As9BTAv40H+H4kTCGxbbhQIbwa
        wS9O0AyMj8uEH8JApewwG90dMljq+wXVC6KF2DZM+CKBUpTDYi93qDibzwZOWb8aTmSnU42aisqyPNi1
        egHVC6IP2nJeI/b1F0iZDyhFOWgGjloYDLeuX2SN9XQ1w81rFYPSJZfyAuki8+cNUCpeRfWCgabsScS+
        /np6J+tjWlFN1BMPHDjE0xUUvQ9ZY6kJa6A871f4I/8YFVFqIpw8nMkLpIvI+X7QUpVK9YJ52sx8ROzr
        L83AqvsFoGot4TXAgSvO5EFJwVFYEeTfbyw5NpJjVJuDv2yH5ttXqO8NBN6Y38xw5XnQxKjAaFL+Pi6C
        w6qlkldyGoR5e7CBM3ZuhX1JG1hj95vrQLwziWdYk6TVP1LHB+N2fRXEL/Lj9NcGGpn3iH39BTf3j8ZF
        VK2lJC4K3PknpwEOfP7MSUiICIcLpbmssbOnf4PlAUJ0xl4yINvjonmBdHHycAYcSQ7n9NeiD6+zEfuG
        CV1k38PFVPIq6Ou6+uwKRaNJmPd0NvAi75nQ2S6hGjUVidHL4GreRk5/DjKmmdg2XKjQoBMPHLis6Dgs
        +NKTatKULJo1Hf65tZ/qg8XYiQdcmTdReW15ubJuDSib9lKb4MCHMnbC5sjvqSZNRefDJgif40n1oEYl
        YaKJdf0FFcIxipqAewhguRyKtiB/64ajwEmxKyH3UAbVqKnAE460GORBq78mvc3MFGJffymrA4X9YQnK
        W1t5TcJ9PCHi60D2DEozairSExOg+EAUr78ahZSpJ9YNk6LG34kXuCGF1wgHDkYXDMredqpRU7HM3xvu
        VvL7q1FJRbHEuuFS1gTs7Q98PbIXF35avxbt2s/XohZ7uUFEyPMJhznAE44A5884AbXowvN+Yts4QZXQ
        FqNexHt8cTooGnf3Nwv38UC723qqUVMh+asWnaHdNQNyMPkiHhaZhPCWevL2RIDP1CngN+1Ts4Hr74gK
        5vTVQGq2G2z/64X4gYSapPCaDhPozJxMbJlPI+pmWm3YJEV1wLbeS/6TiT3zaATcLq3Bt0txWPIrUkqs
        mU/k7n+ethkLkKu+IsLfLApbrqwJ9GFNmVvs7i1jdlNMmQlRqvY94WERMhOIMPNDLYw/aTcyhI9rSz+2
        NCL07ME0cQyezFMCDAn02Tp0qbdK14NpFtPDabNHdwh8LyNq21yEA64D90pFk3F4FKIUoevRwxIcsleS
        +Qn5+MiRXOD/LgqrRCjaXYUTyLBOmerh0mGR3MXHod1xzlTy0iqrrLLKKquMlo3Nf1c5Kv/RJWA8AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>